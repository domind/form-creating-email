{"version":3,"sources":["board/task.js","board/styleConst.js","board/addTask.js","board/column.js","board/addColumn.js","board/board.js","signIn.js","signUp.js","landing.js","app.js","firebase.js","serviceWorker.js","index.js"],"names":["getItemStyle","isDragging","draggableStyle","userSelect","padding","grid","margin","background","color","boxShadow","borderRadius","Task","props","openEdit","bind","deleteTask","e","stopPropagation","this","elementEdit","item","id","content","key","draggableId","index","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","style","onClick","action","actionName","actionItem","defaultValue","onChange","target","value","Row","Col","sm","icon","faEdit","overflow","width","whiteSpace","textOverflow","faTrashAlt","React","Component","addTaskStyle","backgroundColor","AddTask","clickAdd","Button","columnStyle","fontWeight","fontSize","textAlign","Column","takskEdited","actionToDo","text","column","deleteCol","editCol","title","border","height","tasks","length","getListStyle2","minHeight","droppableId","map","placeholder","addColStyle","AddColumn","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","findIndex","indexOf","getListStyle","display","Board","writeUserData","Firebase","database","uid","set","state","console","log","getUserData","on","retrived","val","i","undefined","setState","haveData","onDragEnd","source","destination","slice","sourceColumn","destColumn","colMinHeight","Math","max","prevProps","columnId","data","columnNo","maxColId","apply","parseInt","push","editingCol","editingColId","columns","myColumn","taskNo","maxTaskId","helpWithNoTasksCase","task","className","Container","direction","type","SignIn","event","name","onSubmit","preventDefault","email","password","firebaseProps","signInWithEmailAndPassword","then","error","history","catch","handleClick","signin","user","isInvalid","Form","Group","controlId","Label","Control","Text","variant","disabled","resetPassword","message","signInWithGoogle","signOut","INITIAL_STATE","passwordOne","passwordTwo","SignUpForm","createUserWithEmailAndPassword","Landing","firebaseAppAuth","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","providers","googleProvider","GoogleAuthProvider","App","uder","window","innerHeight","colNumber","updateWindowDimensions","addEventListener","removeEventListener","sendPasswordResetEmail","alert","displayName","dimensions","overflowX","Navbar","bg","Nav","to","Brand","path","render","withFirebaseAuth","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a176f55.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit,faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { grid} from \"./styleConst\";\r\n\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: grid * 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n  // change background colour if dragging\r\n  background: isDragging ? \"rgba(238, 232, 170,0.7) \" : \"rgb(238, 232, 170, 0.95)\",\r\n  color: \"blue\",\r\n  boxShadow: \"10px 10px 5px MidnightBlue  \",\r\n  borderRadius: 5,\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nexport default class Task extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.openEdit = this.openEdit.bind(this);\r\n    this.deleteTask = this.deleteTask.bind(this);\r\n  }\r\ndeleteTask(e){\r\n  e.stopPropagation();\r\n  this.props.elementEdit(this.props.item.id, \"TaskDelete\", this.props.item.content);\r\n}\r\n  openEdit(e) {\r\n    e.stopPropagation();\r\n    this.props.elementEdit(this.props.item.id, \"TaskEdit\", this.props.item.content);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Draggable\r\n        key={this.props.item.id}\r\n        draggableId={this.props.item.id}\r\n        index={this.props.index}\r\n      >\r\n        {(provided, snapshot) => (\r\n          <div\r\n            ref={provided.innerRef}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            style={getItemStyle(\r\n              snapshot.isDragging,\r\n              provided.draggableProps.style\r\n            )}\r\n            onClick={() => this.props.elementEdit(\"\", false)}\r\n          >\r\n            {\" \"}\r\n            {this.props.action.actionName===\"TaskEdit\" &&\r\n            this.props.action.actionItem === this.props.item.id ? (\r\n              <div>\r\n                <input\r\n                  defaultValue={this.props.item.content}\r\n                  onChange={e =>\r\n                    this.props.elementEdit(\r\n                      this.props.item.id,\r\n                      this.props.action.actionName,\r\n                      e.target.value\r\n                    )\r\n                  }\r\n                  onClick={e => {\r\n                    e.stopPropagation();\r\n                  }}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <Row>\r\n                 <Col sm={2} >\r\n                  <FontAwesomeIcon\r\n                    id={this.props.item.id}\r\n                    onClick={this.openEdit}\r\n                    icon={faEdit}\r\n                  />\r\n                </Col>\r\n                <Col\r\n                  sm={8}\r\n                  style={{\r\n                    overflow: \"hidden\",\r\n                    width: 100,\r\n                    whiteSpace: \"nowrap\",\r\n                    textOverflow: \"ellipsis\",\r\n                   // border:\"solid\",\r\n                  }}\r\n                >\r\n                  {this.props.item.content + \" \"}\r\n                </Col>\r\n                <Col sm={2} >\r\n                  <FontAwesomeIcon\r\n                    id={this.props.item.id}\r\n                    onClick={this.deleteTask}\r\n                    icon={faTrashAlt}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n","export const grid =8;\r\nexport const colWidth = 300;","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { grid } from \"./styleConst\";\r\n\r\nconst addTaskStyle = {\r\n  padding: grid * 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n  boxShadow: \"10px 10px 5px MidnightBlue  \",\r\n  backgroundColor: \"rgb(238, 232, 170, 0.95)\",\r\n // color: \"green\"\r\n color: \"blue\",\r\n};\r\n\r\nclass AddTask extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.clickAdd = this.clickAdd.bind(this);\r\n  }\r\n  clickAdd(e) {\r\n    e.stopPropagation();\r\nthis.props.elementEdit(\"\", \"TaskAdd\")\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button style={addTaskStyle} onClick={this.clickAdd}>\r\n          + Add task\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddTask;\r\n","import React from \"react\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport Task from \"./task\";\r\nimport AddTask from \"./addTask\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { grid, colWidth } from \"./styleConst\";\r\n\r\nconst columnStyle = {\r\n  fontWeight: \"bold\",\r\n  fontSize: \"x-large\",\r\n  color: \"white \",\r\n  textAlign: \"center\"\r\n};\r\n\r\nexport default class Column extends React.Component {\r\n\r\n  /*------------------------------------------------------------*/\r\n  elementEdit = (takskEdited, actionToDo, text) => {\r\n   this.props.elementEdit(takskEdited, actionToDo, text, this.props.column.id);\r\n  };\r\n  /*------------------------------------------------------------*/\r\n\r\n  deleteCol = () => {\r\n    this.props.elementEdit( \"\", \"ColDelete\",\"\" ,this.props.column.id);\r\n  };\r\n  editCol = e => {\r\n    e.stopPropagation();\r\n    let text = this.props.column.title;\r\n    this.props.elementEdit(\"\", \"ColEdit\", text, this.props.column.id);\r\n  };\r\n  /*------------------------------------------------------------*/\r\n  render() {\r\n  \r\n    const getItemStyle = (isDragging, draggableStyle) => ({\r\n      // some basic styles to make the items look a bit nicer\r\n      border: \"solid DarkSlateBlue   \",\r\n      userSelect: \"none\",\r\n      padding: grid * 2,\r\n      margin: 10,\r\n      boxShadow: \"10px 10px 5px MidnightBlue  \",\r\n      // change background opacity if dragging\r\n      background: isDragging\r\n        ? \" rgba(100, 149, 237,0.5)\"\r\n        : \"  rgba(100, 149, 237,1)  \",\r\n      borderRadius: 5,\r\n      \r\n      height: 65 * (this.props.column.tasks.length + 1) + 80,\r\n      // styles we need to apply on draggables\r\n      ...draggableStyle\r\n    });\r\n\r\n    const getListStyle2 = {\r\n      padding: grid,\r\n      width: colWidth,\r\n      minHeight: 40\r\n    };\r\n    return (\r\n      <Draggable\r\n        key={this.props.column.id}\r\n        draggableId={this.props.column.id}\r\n        index={this.props.index}\r\n      >\r\n        {(provided, snapshot) => (\r\n          <div\r\n            onClick={() => this.props.elementEdit(\"\", false)}\r\n            ref={provided.innerRef}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            style={getItemStyle(\r\n              snapshot.isDragging,\r\n              provided.draggableProps.style\r\n            )}\r\n          >\r\n            <Droppable droppableId={\"droppable\" + this.props.index}>\r\n              {(provided, snapshot) => (\r\n                <div>\r\n                  <div style={columnStyle}>\r\n                    <Row>\r\n                      {this.props.action.actionName===\"ColEdit\" &&\r\n                      this.props.action.actionItem === this.props.column.id ? (\r\n                        <input\r\n                          defaultValue={this.props.column.title}\r\n                          onChange={e =>\r\n                            this.props.elementEdit(\r\n                              \"\",\r\n                              \"ColEdit\",\r\n                              e.target.value,\r\n                              this.props.column.id\r\n                            )\r\n                          }\r\n                          onClick={e => {\r\n                            e.stopPropagation();\r\n                          }}\r\n                        ></input>\r\n                      ) : (\r\n                        <>\r\n                          <Col sm={2}>\r\n                            <FontAwesomeIcon\r\n                              onClick={this.editCol}\r\n                              icon={faEdit}\r\n                            />\r\n                          </Col>\r\n                          <Col sm={8}>\r\n                            {this.props.column.title\r\n                              ? this.props.column.title\r\n                              : '\"\"'}\r\n                          </Col>\r\n                          <Col sm={2}>\r\n                            <FontAwesomeIcon\r\n                              onClick={this.deleteCol}\r\n                              icon={faTrashAlt}\r\n                            />\r\n                          </Col>\r\n                        </>\r\n                      )}\r\n                    </Row>\r\n                  </div>\r\n\r\n                  <div ref={provided.innerRef} style={getListStyle2}>\r\n                    {this.props.column.tasks.map((item, index) => (\r\n                      <Task\r\n                        key={index}\r\n                        item={item}\r\n                        index={index}\r\n                        elementEdit={this.elementEdit}\r\n                        action={this.props.action}\r\n                      />\r\n                    ))}\r\n                    {provided.placeholder}\r\n                    <AddTask elementEdit={this.elementEdit} />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {grid,colWidth} from \"./styleConst\"\r\n\r\nconst addColStyle = {\r\n  padding: grid * 2,\r\n  margin: 10,\r\n  boxShadow: \"10px 10px 5px MidnightBlue  \",\r\n  backgroundColor: \"rgba(100, 149, 237,1)\",\r\n  color: \"white\",\r\n  width: colWidth,\r\n  minHeight: 40\r\n};\r\n\r\nclass AddColumn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.clickAdd = this.clickAdd.bind(this);\r\n  }\r\n  clickAdd(e) {\r\n    e.stopPropagation();\r\nthis.props.elementEdit(\"\",\"ColAdd\")\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button style={addColStyle} onClick={this.clickAdd}>\r\n          + Add column\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddColumn;\r\n","import React, { Component } from \"react\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\n//import { initData } from \"./initData\";\r\n// file with initial data for testing in case needed uncomment here and modify  getUserDat() as described there.\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Column from \"./column\";\r\nimport AddColumn from \"./addColumn\";\r\nimport Firebase from \"firebase\";\r\n\r\n// a little function to help with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n  return result;\r\n};\r\n\r\n//function for find index of .item in list\r\nconst findIndex = (list, item) => {\r\n  return list\r\n    .map(e => {\r\n      return e.id;\r\n    })\r\n    .indexOf(item);\r\n};\r\n// style for spacing columns\r\nconst getListStyle = {\r\n  display: \"flex\",\r\n  padding: 5,\r\n  margin: 20\r\n};\r\n\r\nclass Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      haveData: false,\r\n      column: [],\r\n      colMinHeight: 6,\r\n  //    colNumber: 4,\r\n      action: { actionName: \"\", actionItem: \"\" }\r\n    };\r\n    this.elementEdit = this.elementEdit.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.uid !== prevProps.uid) {\r\n      if (this.props.uid !== null) this.getUserData();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUserData();\r\n  }\r\n\r\n  writeUserData = () => {\r\n    Firebase.database()\r\n      .ref(this.props.uid + \"/columns\")\r\n      .set(this.state.column);\r\n    console.log(\"DATA SAVED\");\r\n  };\r\n\r\n  getUserData = () => {\r\n    let ref = Firebase.database().ref(this.props.uid + \"/columns\");\r\n    ref.on(\"value\", snapshot => {\r\n      let retrived = snapshot.val();\r\n      if (retrived === null)\r\n       retrived = []; \r\n       // retrived=initData; // uncoment this line to populate with data from initData.js\r\n      else {\r\n        for (let i = 0; i < retrived.length; i++) {\r\n          if (retrived[i].tasks === undefined) retrived[i].tasks = [];\r\n        }\r\n      }\r\n\r\n      this.setState(\r\n        { column: retrived, haveData: true } //,() => console.log(this.state)\r\n      );\r\n    });\r\n\r\n    console.log(\"DATA RETRIEVED\");\r\n  };\r\n  /*------------------------------------------------------------*/\r\n  elementEdit(id, actionToDo, text, columnId) {\r\n    let data = this.state.column;\r\n    let columnNo = findIndex(data, columnId);\r\n    switch (actionToDo) {\r\n      case \"ColAdd\":\r\n        let maxColId;\r\n        if (data.length === 0) maxColId = 0;\r\n        else\r\n          maxColId = Math.max.apply(\r\n            null,\r\n            data.map(column => {\r\n              return parseInt(column.id.slice(3));\r\n            })\r\n          );\r\n        data.push({ id: \"col\" + (maxColId + 1), title: \"\", tasks: [] });\r\n\r\n        this.setState({\r\n          action: {\r\n            actionName: \"ColEdit\",\r\n            actionItem: \"col\" + (maxColId + 1)\r\n          }\r\n        });\r\n        break;\r\n      case \"ColEdit\":\r\n        data[columnNo].title = text;\r\n        this.setState({\r\n          column: data,\r\n          editingCol: true,\r\n          editingColId: columnId,\r\n          action: { actionName: \"ColEdit\", actionItem: columnId }\r\n        });\r\n        break;\r\n      case \"ColDelete\":\r\n        data.splice(findIndex(data, columnId), 1);\r\n        break;\r\n      case \"TaskDelete\":\r\n        const columns = this.state.column;\r\n        const myColumn = columns[findIndex(columns, columnId)];\r\n\r\n        myColumn.tasks.splice(findIndex(myColumn.tasks, id), 1);\r\n        break;\r\n      case \"TaskEdit\":\r\n        let taskNo = findIndex(data[columnNo].tasks, id);\r\n        data[columnNo].tasks[taskNo].content = text;\r\n        this.setState({ column: data });\r\n        this.setState({\r\n          action: { actionName: actionToDo, actionItem: id }\r\n        });\r\n        break;\r\n      case \"TaskAdd\":\r\n        let maxTaskId = Math.max.apply(\r\n          null,\r\n          data.map(columns => {\r\n            let helpWithNoTasksCase;\r\n            if (columns.tasks.length === 0) helpWithNoTasksCase = [0];\r\n            else\r\n              helpWithNoTasksCase = columns.tasks.map(task => {\r\n                return parseInt(task.id.slice(4));\r\n              });\r\n\r\n            return Math.max.apply(null, helpWithNoTasksCase);\r\n          })\r\n        );\r\n\r\n        data[columnNo].tasks.push({\r\n          id: \"task\" + (maxTaskId + 1),\r\n          content: \"\"\r\n        });\r\n        this.setState({\r\n          column: data,\r\n\r\n          action: {\r\n            actionName: \"TaskEdit\",\r\n            actionItem: \"task\" + (maxTaskId + 1)\r\n          }\r\n        });\r\n        break;\r\n      default:\r\n        this.setState({ action: { actionName: \"\", actionItem: \"\" } });\r\n        break;\r\n    }\r\n\r\n    this.setState({ column: data });\r\n    this.writeUserData();\r\n  }\r\n  /*------------------------------------------------------------*/\r\n  onDragEnd = result => {\r\n    const { source, destination } = result;\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (source.droppableId === \"board\") {\r\n      let column = this.state.column;\r\n      const columnMoved = reorder(\r\n        this.state.column,\r\n        result.source.index,\r\n        result.destination.index\r\n      );\r\n\r\n      column = columnMoved;\r\n      this.setState(\r\n        {\r\n          column\r\n        },\r\n        () => this.writeUserData()\r\n      );\r\n    } else {\r\n      if (source.droppableId === destination.droppableId) {\r\n        const column = this.state.column;\r\n        const tasks = reorder(\r\n          this.state.column[source.droppableId.slice(9)].tasks,\r\n          result.source.index,\r\n          result.destination.index\r\n        );\r\n        column[source.droppableId.slice(9)].tasks = tasks;\r\n        this.setState({ tasks }, () => this.writeUserData());\r\n      } else {\r\n        let column = this.state.column;\r\n\r\n        const sourceColumn = Array.from(\r\n          column[source.droppableId.slice(9)].tasks\r\n        ); \r\n        const destColumn = Array.from(\r\n          column[destination.droppableId.slice(9)].tasks\r\n        );\r\n\r\n        const [removed] = sourceColumn.splice(source.index, 1);\r\n        destColumn.splice(destination.index, 0, removed);\r\n        column[source.droppableId.slice(9)].tasks = sourceColumn;\r\n        column[destination.droppableId.slice(9)].tasks = destColumn;\r\n\r\n        this.setState(\r\n          {\r\n            column\r\n          },\r\n          () => this.writeUserData()\r\n        );\r\n\r\n        this.setState({\r\n          colMinHeight: Math.max(\r\n            ...this.state.column.map(column => column.tasks.length)\r\n          )\r\n        });\r\n      }\r\n    }\r\n  };\r\n  /*------------------------------------------------------------*/\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"myStyle\"\r\n\r\n        onClick={() =>\r\n          this.setState({\r\n            editCol: false,\r\n            editingColId: \"\",\r\n            action: { actionName: \"\", actionItem: \"\" }\r\n          })\r\n        }\r\n      >\r\n        <Container style={{ margin: 0 }}>\r\n          <Row>\r\n            <Col style={{ textAlign: \"center\" }}>\r\n              <h1>Testing react-beautiful-dnd</h1>\r\n            </Col>\r\n          </Row>\r\n          {this.state.haveData ? (\r\n            <Row>\r\n              <DragDropContext onDragEnd={this.onDragEnd}>\r\n                <Droppable\r\n                  direction=\"horizontal\"\r\n                  droppableId=\"board\"\r\n                  type=\"COLUMN\"\r\n                >\r\n                  {(provided, snapshot) => (\r\n                    <div>\r\n                      <div ref={provided.innerRef} style={getListStyle}>\r\n                        {this.state.column.map((column, index) => (\r\n                          <Column\r\n                            key={index}\r\n                            column={column}\r\n                            index={index}\r\n                            colMinHeight={this.state.colMinHeight}\r\n                            elementEdit={this.elementEdit}\r\n                            action={this.state.action}\r\n                          />\r\n                        ))}\r\n                        {provided.placeholder}\r\n                        <AddColumn elementEdit={this.elementEdit} />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </Droppable>\r\n              </DragDropContext>\r\n            </Row>\r\n          ) : (\r\n            <Row>Loading data</Row>\r\n          )}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React, { Component } from \"react\";\r\nimport { Col, Row, Form, Button, Container } from \"react-bootstrap\";\r\n\r\nclass SignIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      error: null\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n    const { email, password } = this.state;\r\n\r\n    this.props.firebaseProps\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ email: \"\", password: \"\", error: null });\r\n        this.props.history.push(\"/home\");\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n  };\r\n\r\n  handleClick(signin) {\r\n    signin().then(() => this.props.history.push(\"/home\"));\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props.firebaseProps;\r\n\r\n    const isInvalid = this.state.password === \"\" || this.state.email === \"\";\r\n\r\n\r\n    return (\r\n      <div className='myStyle'>\r\n        <Container>\r\n          {user === \"\" || user === null ? (\r\n            <Row>\r\n              <Col sm={4}>\r\n                <br />\r\n                <p>\r\n                  You can login here with created account, or with your google\r\n                  account\r\n                </p>\r\n\r\n                <Form onSubmit={this.onSubmit}>\r\n                  <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control\r\n                      type=\"email\"\r\n                      placeholder=\"Enter email\"\r\n                      name=\"email\"\r\n                      onChange={this.onChange}\r\n                    />\r\n                    <Form.Text className=\"text-muted\">email</Form.Text>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      name=\"password\"\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Row>\r\n                    <Col>\r\n                      <Button\r\n                        variant=\"warning\"\r\n                        disabled={isInvalid}\r\n                        type=\"submit\"\r\n                      >\r\n                        Login\r\n                      </Button>\r\n                    </Col>\r\n                    <Col>\r\n                      <Button\r\n                        variant=\"info\"\r\n                        onClick={() =>\r\n                          this.props.resetPassword(this.state.email)\r\n                        }\r\n                      >\r\n                        Password reset\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n                <p>{this.state.error && <p>{this.state.error.message}</p>}</p>\r\n                <Row>\r\n                  <Col>\r\n                    <Button\r\n                      variant=\"success\"\r\n                      onClick={() =>\r\n                        this.handleClick(\r\n                          this.props.firebaseProps.signInWithGoogle\r\n                        )\r\n                      }\r\n                    >\r\n                      Sign in with Google\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          ) : (\r\n            <Row>\r\n              <Col>\r\n                <br />\r\n                <Row>\r\n                  <p>\r\n                    You are already logged in as: <b> {this.props.user}</b>\r\n                  </p>\r\n                </Row>{\" \"}\r\n                <Row>\r\n                  <Button\r\n                    variant=\"info\"\r\n                    onClick={this.props.firebaseProps.signOut}\r\n                  >\r\n                    Sign out\r\n                  </Button>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;\r\n","import React, { Component } from \"react\";\r\nimport { Col, Row, Form, Button, Container } from \"react-bootstrap\";\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  error: null\r\n};\r\n\r\nclass SignUpForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n  onSubmit = event => {\r\n    const { email, passwordOne } = this.state;\r\n    this.props.firebaseProps\r\n      .createUserWithEmailAndPassword(email, passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      })\r\n      .then(() => {\r\n        if (this.state.error === null) this.props.history.push(\"/home\");\r\n      });\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  render() {\r\n    const { email, passwordOne, passwordTwo, error } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo || passwordOne === \"\" || email === \"\";\r\n\r\n    return (\r\n      <div className='myStyle'>\r\n        <Container>\r\n          <Row>\r\n            <Col sm={4}>\r\n              <br />\r\n              <p>You can create your account here</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    name=\"email\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <Form.Text className=\"text-muted\">email</Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"passwordOne\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"passwordTwo\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Row>\r\n                  <Col>\r\n                    <Button\r\n                      variant=\"warning\"\r\n                      disabled={isInvalid}\r\n                      type=\"submit\"\r\n                    >\r\n                      Sign Up\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col>\r\n                    <br />\r\n                    {error && <p>{error.message}</p>}\r\n                  </Col>\r\n                </Row>\r\n              </form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SignUpForm;\r\n","import React, { Component } from \"react\";\r\nimport { Col, Row, Button, Container } from \"react-bootstrap\";\r\n\r\nclass Landing extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className='myStyle'>\r\n        <Container>\r\n          <Row>\r\n            <p></p>\r\n          </Row>\r\n          {this.props.user === \"\" || this.props.user === null ? (\r\n            <div>\r\n              <Row>\r\n                <Col sm={6}>\r\n                  <h3>This is Trello like ToDo project</h3>\r\n                  <p>\r\n                    You can create account with e-mail and password, or sign in\r\n                    with your google account to view and edit your personal\r\n                    board\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={3}>\r\n                  <p>Create your account </p>\r\n                </Col>\r\n                <Col sm={3}>\r\n                  <Button onClick={() => this.props.history.push(\"/signup\")}>\r\n                    Sign up\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={3}>\r\n                  <p>Sign in to existing account</p>\r\n                </Col>\r\n                <Col sm={3}>\r\n                  <Button onClick={() => this.props.history.push(\"/signin\")}>\r\n                    Sign in\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <Row>\r\n          <p>You are logged as: {this.props.user}</p>\r\n              </Row>\r\n              <Row>\r\n                \r\n                <Col sm={3}>\r\n                  <Button onClick={() => this.props.history.push(\"/home\")}>\r\n                    My board\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <p></p>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={3}>\r\n                  <Button onClick={this.props.firebaseProps.signOut}>\r\n                    Sign out\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          )}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Landing;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Board from \"./board/board\";\r\nimport SignIn from \"./signIn\";\r\nimport SignUpForm from \"./signUp\";\r\nimport Landing from \"./landing\";\r\nimport * as firebase from \"firebase/app\";\r\nimport { config } from \"./firebase\";\r\nimport { Button, Navbar, Nav } from \"react-bootstrap\";\r\n\r\nimport withFirebaseAuth from \"react-with-firebase-auth\";\r\n\r\nconst firebaseApp = firebase.initializeApp(config);\r\nconst firebaseAppAuth = firebaseApp.auth();\r\n\r\nconst providers = {\r\n  googleProvider: new firebase.auth.GoogleAuthProvider()\r\n};\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      uid: null,\r\n      uder: \"\",\r\n     // width: window.innerWidth,\r\n      height: window.innerHeight,\r\n      colNumber: 3,\r\n    };\r\n\r\n    this.resetPassword = this.resetPassword.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\r\n  }\r\n  updateWindowDimensions() {\r\n    this.setState({  height: window.innerHeight });\r\n  }\r\n\r\n  resetPassword(email) {\r\n    firebaseAppAuth.sendPasswordResetEmail(email);\r\n    alert(\"email with link for password reset was sent to your account\");\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.user !== prevProps.user) {\r\n      if (this.props.user !== null) {\r\n        let user = \"\";\r\n        if (this.props.user.displayName === null) user = this.props.user.email;\r\n        else user = this.props.user.displayName;\r\n        this.setState({\r\n          uid: this.props.user.uid,\r\n          user: user\r\n        });\r\n      } else this.setState({ uid: null, user: \"\" });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const firebaseProps = this.props;\r\n    const dimensions = {\r\n      minHeight: this.state.height,\r\n      overflowX: \"scroll\",\r\n        };\r\n    return (\r\n      <div className=\"myStyle\" style={dimensions}>\r\n        <Router>\r\n          <Navbar bg=\"dark\" variant=\"dark\" >\r\n            <Nav className=\"mr-auto\">\r\n              <Link to={\"/\"}>\r\n                <Navbar.Brand>Start</Navbar.Brand>\r\n              </Link>\r\n              {this.state.uid !== null ? (\r\n                <Link to={\"/home\"}>\r\n                  <Navbar.Text>My board</Navbar.Text>\r\n                </Link>\r\n              ) : (\r\n                \" \"\r\n              )}\r\n            </Nav>\r\n            <Nav>\r\n              {this.state.uid !== null ? (\r\n                <div>\r\n                  {\" \"}\r\n                  <Navbar.Text>\r\n                    Signed in as: {this.state.user}\r\n                  </Navbar.Text>{\" \"}\r\n                  <Button onClick={this.props.signOut}>Sign out</Button>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <Link to={\"/signup\"}>\r\n                    <Button variant=\"primary\">Sign up</Button>{\" \"}\r\n                  </Link>\r\n                  <Navbar.Text>&nbsp;</Navbar.Text>\r\n\r\n                  <Link to={\"/signin\"}>\r\n                    <Button variant=\"primary\">Sign in</Button>\r\n                  </Link>\r\n                </div>\r\n              )}\r\n            </Nav>\r\n          </Navbar>\r\n          <div>\r\n            <Switch>\r\n              <Route\r\n                path={\"/home\"}\r\n                render={props =>\r\n                  this.state.user !== \"\" ? (\r\n                    <Board {...props} uid={this.state.uid} />\r\n                  ) : (\r\n                    <Landing\r\n                      {...props}\r\n                      firebaseProps={firebaseProps}\r\n                      user={this.state.user}\r\n                    />\r\n                  )\r\n                }\r\n              />\r\n              <Route\r\n                path={\"/signin\"}\r\n                render={props => (\r\n                  <SignIn\r\n                    {...props}\r\n                    firebaseProps={firebaseProps}\r\n                    user={this.state.user}\r\n                    resetPassword={this.resetPassword}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path={\"/signup\"}\r\n                render={props => (\r\n                  <SignUpForm {...props} firebaseProps={firebaseProps} />\r\n                )}\r\n              />\r\n              <Route\r\n                path={\"/\"}\r\n                render={props => (\r\n                  <Landing\r\n                    {...props}\r\n                    firebaseProps={firebaseProps}\r\n                    user={this.state.user}\r\n                  />\r\n                )}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withFirebaseAuth({\r\n  providers,\r\n  firebaseAppAuth\r\n})(App);\r\n","export  const config = {\r\n\r\n    apiKey: \"AIzaSyCmrU0AuRpNGPRsD2-JjQ5os7gPjKGxHMo\",\r\n  authDomain: \"tribal-drake-257712.firebaseapp.com\",\r\n  databaseURL: \"https://tribal-drake-257712.firebaseio.com\",\r\n  projectId: \"tribal-drake-257712\",\r\n  storageBucket: \"tribal-drake-257712.appspot.com\",\r\n  messagingSenderId: \"577742396333\",\r\n  appId: \"1:577742396333:web:8a52c828c3edb5de21df24\"\r\n  };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}